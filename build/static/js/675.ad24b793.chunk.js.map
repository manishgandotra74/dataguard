{"version":3,"file":"static/js/675.ad24b793.chunk.js","mappings":"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","sources":["components/sidebar/sidebar.jsx","redux/apis/plugin.api.js","redux/actions/plugin.action.js","redux/actions/index.js"],"sourcesContent":["import React from \"react\"\r\nimport { Nav } from 'react-bootstrap'\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport './sidebar.css'\r\n\r\nimport allActions from '../../redux/actions/index'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport default function Sidebar() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const plugin = useSelector((state) => state.plugin)\r\n    React.useEffect(() => {\r\n        dispatch(allActions.pluginActions.getTabs(''))\r\n    }, [])\r\n    function navigate_path(path) {\r\n        navigate(`/${path}`);\r\n    }\r\n    return <>\r\n        <Nav className=\" d-md-block sidenav\"\r\n            activeKey=\"/\"\r\n            onSelect={selectedKey => navigate_path(selectedKey)}\r\n        >\r\n            <div className=\"sidebar-sticky\"></div>\r\n            <Nav.Item key='key'>\r\n                <Nav.Link className=\"heading\" eventKey=\"\">Data<strong>Guard</strong></Nav.Link>\r\n            </Nav.Item>\r\n            {plugin?.tabs ? plugin?.tabs?.map(item =>\r\n                <Nav.Item key={item.path}>\r\n                    <Nav.Link className={location.pathname === '/'+item.path ? 'selected':'sider'} eventKey={item.path}>{item.title}</Nav.Link>\r\n                </Nav.Item>) : []}\r\n\r\n                <Nav.Item key='key'>\r\n                <Nav.Link  eventKey=\"\">Data<strong>Guard</strong></Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    </>\r\n}","import axios from 'axios'\r\n\r\nconst getPlugins_service = async (type) => {\r\n  return axios.get(`http://localhost:5000/tabdata?path=${type}`)\r\n    .then((response) => {\r\n      return response?.data?.[0]\r\n    })\r\n    .catch((reason) => {\r\n      if (reason.response) {\r\n        return reason.response\r\n      }\r\n    })\r\n};\r\nconst getTabs_service = async () => {\r\n  return axios.get(`http://localhost:5000/tabdata`)\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n    .catch((reason) => {\r\n      if (reason.response) {\r\n        return reason.response\r\n      }\r\n    })\r\n};\r\nconst getFilteredPlugins_service = async (filter) => {\r\n  return axios.get(`http://localhost:5000/plugins?${filter}`)\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n    .catch((reason) => {\r\n      if (reason.response) {\r\n        return reason.response\r\n      }\r\n    })\r\n};\r\nconst update_status_service = async (id, data) => {\r\n  return axios.put(`http://localhost:5000/plugins/${id}`, data)\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n    .catch((reason) => {\r\n      if (reason.response) {\r\n        return reason.response\r\n      }\r\n    })\r\n};\r\nexport default {\r\n  getPlugins_service,\r\n  getTabs_service,\r\n  getFilteredPlugins_service,\r\n  update_status_service\r\n};\r\n","import API from \"../apis/plugin.api\";\r\nimport { Types } from \"../types/plugin.types\";\r\n\r\n// Register\r\nconst getPlugins = (type) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      let user = await API.getPlugins_service(type);\r\n      dispatch({ type: Types.FETCHED_PLUGINS_SUCCESSFULLY, payload: user });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: Types.SERVER_ERROR, payload: { status: 400, message: \"Some error occured\" } });\r\n    }\r\n  };\r\n}\r\nconst getTabs = () => {\r\n  return async function (dispatch) {\r\n    try {\r\n      let user = await API.getTabs_service();\r\n      dispatch({ type: Types.FETCHED_TABS_SUCCESSFULLY, payload: user });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: Types.SERVER_ERROR, payload: { status: 400, message: \"Some error occured\" } });\r\n    }\r\n  };\r\n}\r\nconst getFilteredPlugins = (filter) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      let user = await API.getFilteredPlugins_service(filter);\r\n      dispatch({ type: Types.FILTERED_FETCHED_PLUGINS_SUCCESSFULLY, payload: user });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: Types.SERVER_ERROR, payload: { status: 400, message: \"Some error occured\" } });\r\n    }\r\n  };\r\n}\r\nconst updateStatus = (value  ,id) => {\r\n  value.status  = id ? \"active\":\"inactive\"\r\n\r\n  return async function (dispatch) {\r\n    try {\r\n      let user = await API.update_status_service(value.id, value);\r\n      dispatch({ type: Types.PLUGINS_UPDATED_SUCCESSFULLY, payload: user });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: Types.SERVER_ERROR, payload: { status: 400, message: \"Some error occured\" } });\r\n    }\r\n  };\r\n}\r\nexport default {\r\n    getTabs,\r\n    getPlugins,\r\n    getFilteredPlugins,\r\n    updateStatus\r\n}","import pluginActions from './plugin.action'\r\n\r\nconst allActions = {\r\n    pluginActions,\r\n}\r\n\r\nexport default allActions"],"names":["Sidebar","navigate","useNavigate","dispatch","useDispatch","location","useLocation","plugin","useSelector","state","React","allActions","Nav","className","activeKey","onSelect","selectedKey","eventKey","tabs","map","item","pathname","path","title","getPlugins_service","type","axios","then","response","data","catch","reason","getTabs_service","getFilteredPlugins_service","filter","update_status_service","id","getTabs","API","user","Types","payload","status","message","getPlugins","getFilteredPlugins","updateStatus","value","pluginActions"],"sourceRoot":""}